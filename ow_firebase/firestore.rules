// Allow read/write access on all documents to any user signed in to the application

service cloud.firestore {
  function test(database) {
     return get(/databases/$(database)/documents/org/mywell/resource/12345).data.owner.createdByUserId > 0;
  }

   function isAdmin() {
      //TODO: check if user is admin
      return false;
    }

    function isResourceOwner(resourceId) {
      return get(/databases/$(database)/documents/org/mywell/resource/$(resourceId)).owner.createdByUserId == request.auth.uid;
      //return exists(/org/mywell/resource/12345);
    }
  
  match /databases/{database}/documents {

    //TODO: remove - not sure why login page is writing to this
    match /org/{document=**} {
      allow read, update, delete: if true;
      // allow create: if true;
    }
   
    match /org/{orgId}/resource/{document=**} {
      allow read, update, delete: if request.auth.uid != null;
      allow create: if request.auth.uid != null;
    }

 		match /org/{orgId}/reading/{document=**} {
      allow read: if request.auth.uid != null;
      //allow create, update: if isAdmin() || isResourceOwner(request.data.resourceId);
      // allow create, update: if get(/databases/$(database)/documents/org/mywell/resource/12345).owner.createdByUserId == request.auth.uid;
      allow create, update: if test(database);
    }

    match /org/{orgId}/shortId/{document=**} {
      allow read, update, delete: if request.auth.uid != null;
      allow create: if request.auth.uid != null;
    }

    //Only allow user to manipulate their own data
    match /org/{orgId}/user/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;

      match /pendingResources/{id} {
        allow read, update, delete: if request.auth.uid == userId;
        allow create: if request.auth.uid != null;
      }

      match /pendingReadings/{id} {
        allow read, update, delete: if request.auth.uid == userId;
        allow create: if request.auth.uid != null;
      }

      //Don't allow user to edit their pending resources - since these are a copy
      //TODO: allow an admin user to do this though.
      match /pendingResourcesV1_1/{id} {
        allow get, list: if request.auth.uid == userId;
        allow update, delete, create: if false;
      }
    }
  }
}
