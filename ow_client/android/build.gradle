// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"

            //Crashlytics dependencies via maven
            url 'https://maven.fabric.io/public'
        }
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        //Allow us to read google-services.json files and use firebase
        classpath 'com.google.gms:google-services:3.2.1'
        //Crashlytics dependencies
        classpath 'io.fabric.tools:gradle:1.25.4'
        //Firebase performance dependencies
        classpath 'com.google.firebase:firebase-plugins:1.1.1'
    }
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url "$rootDir/../node_modules/react-native/android"
        }
        jcenter()
        google()
        maven { url 'https://jitpack.io' }
    }
}

// react-native-navigation's library has different builds per react-native version so ignore them
subprojects { subproject ->
    afterEvaluate {
        if ((subproject.plugins.hasPlugin('android') || subproject.plugins.hasPlugin('android-library'))) {
            android {
                variantFilter { variant ->
                    def names = variant.flavors*.name
                    // To check for a certain build type, use variant.buildType.name == "<buildType>"
                    if (names.contains("reactNative51") 
                    || names.contains("reactNative56") 
                    || names.contains("reactNative57")
                    || names.contains("reactNative57_5")) {
                        // Gradle ignores any variants that satisfy the conditions above.
                        setIgnore(true)
                    }
                }
            }
        }
    }
}